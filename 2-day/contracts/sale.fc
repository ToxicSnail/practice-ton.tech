#include "imports/stdlib.fc";

;; transfer#0f8a7ea5 query_id:uint64 amount:(VarUInteger 16) destination:MsgAddress
;;                 response_destination:MsgAddress custom_payload:(Maybe ^Cell)
;;                 forward_ton_amount:(VarUInteger 16) forward_payload:(Either Cell ^Cell)
;;                 = InternalMsgBody;

() send_tokens (slice user_address, int jetton_amount, int forward_amount) impure {
  slice jetton_wallet_address = get_data().begin_parse();
    var msg_body = begin_cell()
        .store_uint(0x0f8a7ea5, 32)
        .store_uint(0, 32)
        .store_coins(jetton_amount)
        .store_slice(user_address)
        .store_slice(user_address)
        .store_uint(0, 1)
        .store_coins(forward_amount)
        .store_uint(0, 1)
        .end_cell();
  
  var msg = begin_cell()
    .store_uint(0, 1) ;; tag
    .store_uint(1, 1) ;; ihr_disabled
    .store_uint(1, 1) ;; allow bounces
    .store_uint(0, 1) ;; not bounced itself
    .store_uint(0, 2) ;; source address
    .store_slice(jetton_wallet_address)
    .store_coins(100000000) ;; amount
    .store_uint(0, 1) ;; extra currency
    .store_coins(0) ;; ihr_fee
    .store_coins(0) ;; fwd_fee 
    .store_uint(0, 64) ;; lt of transaction
    .store_uint(0, 32) ;; unixtime of transaction
    .store_uint(0,  1) ;; no init-field flag (Maybe)
    .store_uint(1,  1) ;; inplace message body flag (Either)
    .store_ref(msg_body)
  .end_cell();



  send_raw_message(msg, 0);
}

const admin_address = "0QC5r2uWKhsZgykpnCyJ0_B5o2fhaMDSDe9Ah8lN3qy1C9na"a;

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (msg_value < 500000000) {
        return ();
    }

    int op = in_msg_body~load_uint(32);
    if (op == 1) {
        set_data(begin_cell().store_slice(in_msg_body).end_cell());
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) {
        return ();
    }
    slice sender_address = cs~load_msg_addr();

    if (op == 2) {
        throw_unless(64, equal_slices_bits(sender_address,admin_address));
        var msg = begin_cell()
            .store_uint(0, 1) ;; tag
            .store_uint(1, 1) ;; ihr_disabled
            .store_uint(1, 1) ;; allow bounces
            .store_uint(0, 1) ;; not bounced itself
            .store_uint(0, 2) ;; source address
            .store_slice(admin_address)
            .store_coins(my_balance) ;; amount
            .store_uint(0, 1) ;; extra currency
            .store_coins(0) ;; ihr_fee
            .store_coins(0) ;; fwd_fee 
            .store_uint(0, 64) ;; lt of transaction
            .store_uint(0, 32) ;; unixtime of transaction
            .store_uint(0,  1) ;; no init-field flag (Maybe)
            .store_uint(0,  1) ;; inplace message body flag (Either)
        .end_cell();
        send_raw_message(msg, 128);
        return ();
    }

    int jetton_value = msg_value * 2;
    send_tokens(sender_address, jetton_value, 100000000);
}
